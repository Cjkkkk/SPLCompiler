Terminals unused in grammar

   IN
   PACKED
   SET
   WITH


State 49 conflicts: 2 shift/reduce
State 172 conflicts: 1 shift/reduce


Grammar

    0 $accept: program "end of file"

    1 program: program_head routine DOT

    2 program_head: PROGRAM ID SEMI

    3 routine: routine_head routine_body

    4 sub_routine: routine_head routine_body

    5 routine_head: label_part const_part type_part var_part routine_part

    6 label_part: %empty

    7 const_part: CONST const_expr_list
    8           | %empty

    9 const_expr_list: const_expr_list ID EQUAL const_value SEMI
   10                | ID EQUAL const_value SEMI

   11 const_value: INTEGER
   12            | REAL
   13            | CHAR
   14            | STRING
   15            | SYS_CON

   16 type_part: TYPE type_decl_list
   17          | %empty

   18 type_decl_list: type_decl_list type_definition
   19               | type_definition

   20 type_definition: ID EQUAL type_decl SEMI

   21 type_decl: simple_type_decl
   22          | array_type_decl
   23          | record_type_decl

   24 simple_type_decl: SYS_TYPE
   25                 | ID
   26                 | LP name_list RP
   27                 | const_value DOTDOT const_value
   28                 | MINUS const_value DOTDOT const_value
   29                 | MINUS const_value DOTDOT MINUS const_value
   30                 | ID DOTDOT ID

   31 array_type_decl: ARRAY LB simple_type_decl RB OF type_decl

   32 record_type_decl: RECORD field_decl_list _END

   33 field_decl_list: field_decl_list field_decl
   34                | field_decl

   35 field_decl: name_list COLON type_decl SEMI

   36 name_list: name_list COMMA ID
   37          | ID

   38 var_part: VAR var_decl_list
   39         | %empty

   40 var_decl_list: var_decl_list var_decl
   41              | var_decl

   42 var_decl: name_list COLON type_decl SEMI

   43 routine_part: routine_part function_decl
   44             | routine_part procedure_decl
   45             | function_decl
   46             | procedure_decl
   47             | %empty

   48 function_decl: function_head SEMI sub_routine SEMI

   49 function_head: FUNCTION ID parameters COLON simple_type_decl

   50 procedure_decl: procedure_head SEMI sub_routine SEMI

   51 procedure_head: PROCEDURE ID parameters

   52 parameters: LP para_decl_list RP
   53           | %empty

   54 para_decl_list: para_decl_list SEMI para_type_list
   55               | para_type_list

   56 para_type_list: var_para_list COLON simple_type_decl
   57               | val_para_list COLON simple_type_decl

   58 var_para_list: VAR name_list

   59 val_para_list: name_list

   60 routine_body: compound_stmt

   61 compound_stmt: _BEGIN stmt_list _END

   62 stmt_list: stmt_list stmt SEMI
   63          | %empty

   64 stmt: INTEGER COLON non_label_stmt
   65     | non_label_stmt

   66 non_label_stmt: assign_stmt
   67               | proc_stmt
   68               | compound_stmt
   69               | if_stmt
   70               | repeat_stmt
   71               | while_stmt
   72               | for_stmt
   73               | case_stmt
   74               | goto_stmt

   75 assign_stmt: ID ASSIGN expression
   76            | ID LB expression RB ASSIGN expression
   77            | ID DOT ID ASSIGN expression

   78 proc_stmt: ID
   79          | ID LP args_list RP
   80          | SYS_PROC
   81          | SYS_PROC LP expression_list RP
   82          | READ LP factor RP

   83 if_stmt: IF expression THEN stmt else_clause

   84 else_clause: ELSE stmt
   85            | %empty

   86 repeat_stmt: REPEAT stmt_list UNTIL expression

   87 while_stmt: WHILE expression DO stmt

   88 for_stmt: FOR ID ASSIGN expression direction expression DO stmt

   89 direction: TO
   90          | DOWNTO

   91 case_stmt: CASE expression OF case_expr_list _END

   92 case_expr_list: case_expr_list case_expr
   93               | case_expr

   94 case_expr: const_value COLON stmt SEMI
   95          | ID COLON stmt SEMI

   96 goto_stmt: GOTO INTEGER

   97 expression_list: expression_list COMMA expression
   98                | expression

   99 expression: expression GE expr
  100           | expression GT expr
  101           | expression LE expr
  102           | expression LT expr
  103           | expression EQUAL expr
  104           | expression UNEQUAL expr
  105           | expr

  106 expr: expr PLUS term
  107     | expr MINUS term
  108     | expr OR term
  109     | term

  110 term: term MUL factor
  111     | term DIV factor
  112     | term MOD factor
  113     | term AND factor
  114     | factor

  115 factor: ID
  116       | ID LP args_list RP
  117       | SYS_FUNCT
  118       | SYS_FUNCT LP args_list RP
  119       | const_value
  120       | LP expression RP
  121       | NOT factor
  122       | MINUS factor
  123       | ID LB expression RB
  124       | ID DOT ID

  125 args_list: args_list COMMA expression
  126          | expression


Terminals, with rules where they appear

"end of file" (0) 0
error (256)
ASSIGN (258) 75 76 77 88
OR (259) 108
AND (260) 113
NOT (261) 121
EQUAL (262) 9 10 20 103
UNEQUAL (263) 104
GE (264) 99
GT (265) 100
LE (266) 101
LT (267) 102
PLUS (268) 106
MINUS (269) 28 29 107 122
MUL (270) 110
DIV (271) 111
MOD (272) 112
ARRAY (273) 31
_BEGIN (274) 61
CASE (275) 91
CONST (276) 7
DO (277) 87 88
DOWNTO (278) 90
ELSE (279) 84
_END (280) 32 61 91
FOR (281) 88
FUNCTION (282) 49
GOTO (283) 96
IF (284) 83
IN (285)
OF (286) 31 91
PACKED (287)
PROCEDURE (288) 51
PROGRAM (289) 2
RECORD (290) 32
REPEAT (291) 86
SET (292)
THEN (293) 83
TO (294) 89
TYPE (295) 16
UNTIL (296) 86
VAR (297) 38 58
WHILE (298) 87
WITH (299)
SYS_CON <int> (300) 15
SYS_FUNCT <int> (301) 117 118
READ (302) 82
SYS_PROC <int> (303) 80 81
SYS_TYPE <int> (304) 24
INTEGER <int> (305) 11 64 96
REAL <double> (306) 12
CHAR <char> (307) 13
STRING <std::string> (308) 14
ID <std::string> (309) 2 9 10 20 25 30 36 37 49 51 75 76 77 78 79 88
    95 115 116 123 124
LP (310) 26 52 79 81 82 116 118 120
RP (311) 26 52 79 81 82 116 118 120
LB (312) 31 76 123
RB (313) 31 76 123
COMMA (314) 36 97 125
COLON (315) 35 42 49 56 57 64 94 95
DOTDOT (316) 27 28 29 30
DOT (317) 1 77 124
SEMI (318) 2 9 10 20 35 42 48 50 54 62 94 95


Nonterminals, with rules where they appear

$accept (64)
    on left: 0
program (65)
    on left: 1, on right: 0
program_head (66)
    on left: 2, on right: 1
routine (67)
    on left: 3, on right: 1
sub_routine (68)
    on left: 4, on right: 48 50
routine_head (69)
    on left: 5, on right: 3 4
label_part (70)
    on left: 6, on right: 5
const_part (71)
    on left: 7 8, on right: 5
const_expr_list (72)
    on left: 9 10, on right: 7 9
const_value (73)
    on left: 11 12 13 14 15, on right: 9 10 27 28 29 94 119
type_part (74)
    on left: 16 17, on right: 5
type_decl_list (75)
    on left: 18 19, on right: 16 18
type_definition (76)
    on left: 20, on right: 18 19
type_decl (77)
    on left: 21 22 23, on right: 20 31 35 42
simple_type_decl (78)
    on left: 24 25 26 27 28 29 30, on right: 21 31 49 56 57
array_type_decl (79)
    on left: 31, on right: 22
record_type_decl (80)
    on left: 32, on right: 23
field_decl_list (81)
    on left: 33 34, on right: 32 33
field_decl (82)
    on left: 35, on right: 33 34
name_list (83)
    on left: 36 37, on right: 26 35 36 42 58 59
var_part (84)
    on left: 38 39, on right: 5
var_decl_list (85)
    on left: 40 41, on right: 38 40
var_decl (86)
    on left: 42, on right: 40 41
routine_part (87)
    on left: 43 44 45 46 47, on right: 5 43 44
function_decl (88)
    on left: 48, on right: 43 45
function_head (89)
    on left: 49, on right: 48
procedure_decl (90)
    on left: 50, on right: 44 46
procedure_head (91)
    on left: 51, on right: 50
parameters (92)
    on left: 52 53, on right: 49 51
para_decl_list (93)
    on left: 54 55, on right: 52 54
para_type_list (94)
    on left: 56 57, on right: 54 55
var_para_list (95)
    on left: 58, on right: 56
val_para_list (96)
    on left: 59, on right: 57
routine_body (97)
    on left: 60, on right: 3 4
compound_stmt (98)
    on left: 61, on right: 60 68
stmt_list (99)
    on left: 62 63, on right: 61 62 86
stmt (100)
    on left: 64 65, on right: 62 83 84 87 88 94 95
non_label_stmt (101)
    on left: 66 67 68 69 70 71 72 73 74, on right: 64 65
assign_stmt (102)
    on left: 75 76 77, on right: 66
proc_stmt (103)
    on left: 78 79 80 81 82, on right: 67
if_stmt (104)
    on left: 83, on right: 69
else_clause (105)
    on left: 84 85, on right: 83
repeat_stmt (106)
    on left: 86, on right: 70
while_stmt (107)
    on left: 87, on right: 71
for_stmt (108)
    on left: 88, on right: 72
direction (109)
    on left: 89 90, on right: 88
case_stmt (110)
    on left: 91, on right: 73
case_expr_list (111)
    on left: 92 93, on right: 91 92
case_expr (112)
    on left: 94 95, on right: 92 93
goto_stmt (113)
    on left: 96, on right: 74
expression_list (114)
    on left: 97 98, on right: 81 97
expression (115)
    on left: 99 100 101 102 103 104 105, on right: 75 76 77 83 86 87
    88 91 97 98 99 100 101 102 103 104 120 123 125 126
expr (116)
    on left: 106 107 108 109, on right: 99 100 101 102 103 104 105
    106 107 108
term (117)
    on left: 110 111 112 113 114, on right: 106 107 108 109 110 111
    112 113
factor (118)
    on left: 115 116 117 118 119 120 121 122 123 124, on right: 82
    110 111 112 113 114 121 122
args_list (119)
    on left: 125 126, on right: 79 116 118 125


State 0

    0 $accept: . program "end of file"

    PROGRAM  shift, and go to state 1

    program       go to state 2
    program_head  go to state 3


State 1

    2 program_head: PROGRAM . ID SEMI

    ID  shift, and go to state 4


State 2

    0 $accept: program . "end of file"

    "end of file"  shift, and go to state 5


State 3

    1 program: program_head . routine DOT

    $default  reduce using rule 6 (label_part)

    routine       go to state 6
    routine_head  go to state 7
    label_part    go to state 8


State 4

    2 program_head: PROGRAM ID . SEMI

    SEMI  shift, and go to state 9


State 5

    0 $accept: program "end of file" .

    $default  accept


State 6

    1 program: program_head routine . DOT

    DOT  shift, and go to state 10


State 7

    3 routine: routine_head . routine_body

    _BEGIN  shift, and go to state 11

    routine_body   go to state 12
    compound_stmt  go to state 13


State 8

    5 routine_head: label_part . const_part type_part var_part routine_part

    CONST  shift, and go to state 14

    $default  reduce using rule 8 (const_part)

    const_part  go to state 15


State 9

    2 program_head: PROGRAM ID SEMI .

    $default  reduce using rule 2 (program_head)


State 10

    1 program: program_head routine DOT .

    $default  reduce using rule 1 (program)


State 11

   61 compound_stmt: _BEGIN . stmt_list _END

    $default  reduce using rule 63 (stmt_list)

    stmt_list  go to state 16


State 12

    3 routine: routine_head routine_body .

    $default  reduce using rule 3 (routine)


State 13

   60 routine_body: compound_stmt .

    $default  reduce using rule 60 (routine_body)


State 14

    7 const_part: CONST . const_expr_list

    ID  shift, and go to state 17

    const_expr_list  go to state 18


State 15

    5 routine_head: label_part const_part . type_part var_part routine_part

    TYPE  shift, and go to state 19

    $default  reduce using rule 17 (type_part)

    type_part  go to state 20


State 16

   61 compound_stmt: _BEGIN stmt_list . _END
   62 stmt_list: stmt_list . stmt SEMI

    _BEGIN    shift, and go to state 11
    CASE      shift, and go to state 21
    _END      shift, and go to state 22
    FOR       shift, and go to state 23
    GOTO      shift, and go to state 24
    IF        shift, and go to state 25
    REPEAT    shift, and go to state 26
    WHILE     shift, and go to state 27
    READ      shift, and go to state 28
    SYS_PROC  shift, and go to state 29
    INTEGER   shift, and go to state 30
    ID        shift, and go to state 31

    compound_stmt   go to state 32
    stmt            go to state 33
    non_label_stmt  go to state 34
    assign_stmt     go to state 35
    proc_stmt       go to state 36
    if_stmt         go to state 37
    repeat_stmt     go to state 38
    while_stmt      go to state 39
    for_stmt        go to state 40
    case_stmt       go to state 41
    goto_stmt       go to state 42


State 17

   10 const_expr_list: ID . EQUAL const_value SEMI

    EQUAL  shift, and go to state 43


State 18

    7 const_part: CONST const_expr_list .
    9 const_expr_list: const_expr_list . ID EQUAL const_value SEMI

    ID  shift, and go to state 44

    $default  reduce using rule 7 (const_part)


State 19

   16 type_part: TYPE . type_decl_list

    ID  shift, and go to state 45

    type_decl_list   go to state 46
    type_definition  go to state 47


State 20

    5 routine_head: label_part const_part type_part . var_part routine_part

    VAR  shift, and go to state 48

    $default  reduce using rule 39 (var_part)

    var_part  go to state 49


State 21

   91 case_stmt: CASE . expression OF case_expr_list _END

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    expression   go to state 61
    expr         go to state 62
    term         go to state 63
    factor       go to state 64


State 22

   61 compound_stmt: _BEGIN stmt_list _END .

    $default  reduce using rule 61 (compound_stmt)


State 23

   88 for_stmt: FOR . ID ASSIGN expression direction expression DO stmt

    ID  shift, and go to state 65


State 24

   96 goto_stmt: GOTO . INTEGER

    INTEGER  shift, and go to state 66


State 25

   83 if_stmt: IF . expression THEN stmt else_clause

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    expression   go to state 67
    expr         go to state 62
    term         go to state 63
    factor       go to state 64


State 26

   86 repeat_stmt: REPEAT . stmt_list UNTIL expression

    $default  reduce using rule 63 (stmt_list)

    stmt_list  go to state 68


State 27

   87 while_stmt: WHILE . expression DO stmt

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    expression   go to state 69
    expr         go to state 62
    term         go to state 63
    factor       go to state 64


State 28

   82 proc_stmt: READ . LP factor RP

    LP  shift, and go to state 70


State 29

   80 proc_stmt: SYS_PROC .
   81          | SYS_PROC . LP expression_list RP

    LP  shift, and go to state 71

    $default  reduce using rule 80 (proc_stmt)


State 30

   64 stmt: INTEGER . COLON non_label_stmt

    COLON  shift, and go to state 72


State 31

   75 assign_stmt: ID . ASSIGN expression
   76            | ID . LB expression RB ASSIGN expression
   77            | ID . DOT ID ASSIGN expression
   78 proc_stmt: ID .
   79          | ID . LP args_list RP

    ASSIGN  shift, and go to state 73
    LP      shift, and go to state 74
    LB      shift, and go to state 75
    DOT     shift, and go to state 76

    $default  reduce using rule 78 (proc_stmt)


State 32

   68 non_label_stmt: compound_stmt .

    $default  reduce using rule 68 (non_label_stmt)


State 33

   62 stmt_list: stmt_list stmt . SEMI

    SEMI  shift, and go to state 77


State 34

   65 stmt: non_label_stmt .

    $default  reduce using rule 65 (stmt)


State 35

   66 non_label_stmt: assign_stmt .

    $default  reduce using rule 66 (non_label_stmt)


State 36

   67 non_label_stmt: proc_stmt .

    $default  reduce using rule 67 (non_label_stmt)


State 37

   69 non_label_stmt: if_stmt .

    $default  reduce using rule 69 (non_label_stmt)


State 38

   70 non_label_stmt: repeat_stmt .

    $default  reduce using rule 70 (non_label_stmt)


State 39

   71 non_label_stmt: while_stmt .

    $default  reduce using rule 71 (non_label_stmt)


State 40

   72 non_label_stmt: for_stmt .

    $default  reduce using rule 72 (non_label_stmt)


State 41

   73 non_label_stmt: case_stmt .

    $default  reduce using rule 73 (non_label_stmt)


State 42

   74 non_label_stmt: goto_stmt .

    $default  reduce using rule 74 (non_label_stmt)


State 43

   10 const_expr_list: ID EQUAL . const_value SEMI

    SYS_CON  shift, and go to state 52
    INTEGER  shift, and go to state 54
    REAL     shift, and go to state 55
    CHAR     shift, and go to state 56
    STRING   shift, and go to state 57

    const_value  go to state 78


State 44

    9 const_expr_list: const_expr_list ID . EQUAL const_value SEMI

    EQUAL  shift, and go to state 79


State 45

   20 type_definition: ID . EQUAL type_decl SEMI

    EQUAL  shift, and go to state 80


State 46

   16 type_part: TYPE type_decl_list .
   18 type_decl_list: type_decl_list . type_definition

    ID  shift, and go to state 45

    $default  reduce using rule 16 (type_part)

    type_definition  go to state 81


State 47

   19 type_decl_list: type_definition .

    $default  reduce using rule 19 (type_decl_list)


State 48

   38 var_part: VAR . var_decl_list

    ID  shift, and go to state 82

    name_list      go to state 83
    var_decl_list  go to state 84
    var_decl       go to state 85


State 49

    5 routine_head: label_part const_part type_part var_part . routine_part

    FUNCTION   shift, and go to state 86
    PROCEDURE  shift, and go to state 87

    FUNCTION   [reduce using rule 47 (routine_part)]
    PROCEDURE  [reduce using rule 47 (routine_part)]
    $default   reduce using rule 47 (routine_part)

    routine_part    go to state 88
    function_decl   go to state 89
    function_head   go to state 90
    procedure_decl  go to state 91
    procedure_head  go to state 92


State 50

  121 factor: NOT . factor

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    factor       go to state 93


State 51

  122 factor: MINUS . factor

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    factor       go to state 94


State 52

   15 const_value: SYS_CON .

    $default  reduce using rule 15 (const_value)


State 53

  117 factor: SYS_FUNCT .
  118       | SYS_FUNCT . LP args_list RP

    LP  shift, and go to state 95

    $default  reduce using rule 117 (factor)


State 54

   11 const_value: INTEGER .

    $default  reduce using rule 11 (const_value)


State 55

   12 const_value: REAL .

    $default  reduce using rule 12 (const_value)


State 56

   13 const_value: CHAR .

    $default  reduce using rule 13 (const_value)


State 57

   14 const_value: STRING .

    $default  reduce using rule 14 (const_value)


State 58

  115 factor: ID .
  116       | ID . LP args_list RP
  123       | ID . LB expression RB
  124       | ID . DOT ID

    LP   shift, and go to state 96
    LB   shift, and go to state 97
    DOT  shift, and go to state 98

    $default  reduce using rule 115 (factor)


State 59

  120 factor: LP . expression RP

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    expression   go to state 99
    expr         go to state 62
    term         go to state 63
    factor       go to state 64


State 60

  119 factor: const_value .

    $default  reduce using rule 119 (factor)


State 61

   91 case_stmt: CASE expression . OF case_expr_list _END
   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 100
    UNEQUAL  shift, and go to state 101
    GE       shift, and go to state 102
    GT       shift, and go to state 103
    LE       shift, and go to state 104
    LT       shift, and go to state 105
    OF       shift, and go to state 106


State 62

  105 expression: expr .
  106 expr: expr . PLUS term
  107     | expr . MINUS term
  108     | expr . OR term

    OR     shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109

    $default  reduce using rule 105 (expression)


State 63

  109 expr: term .
  110 term: term . MUL factor
  111     | term . DIV factor
  112     | term . MOD factor
  113     | term . AND factor

    AND  shift, and go to state 110
    MUL  shift, and go to state 111
    DIV  shift, and go to state 112
    MOD  shift, and go to state 113

    $default  reduce using rule 109 (expr)


State 64

  114 term: factor .

    $default  reduce using rule 114 (term)


State 65

   88 for_stmt: FOR ID . ASSIGN expression direction expression DO stmt

    ASSIGN  shift, and go to state 114


State 66

   96 goto_stmt: GOTO INTEGER .

    $default  reduce using rule 96 (goto_stmt)


State 67

   83 if_stmt: IF expression . THEN stmt else_clause
   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 100
    UNEQUAL  shift, and go to state 101
    GE       shift, and go to state 102
    GT       shift, and go to state 103
    LE       shift, and go to state 104
    LT       shift, and go to state 105
    THEN     shift, and go to state 115


State 68

   62 stmt_list: stmt_list . stmt SEMI
   86 repeat_stmt: REPEAT stmt_list . UNTIL expression

    _BEGIN    shift, and go to state 11
    CASE      shift, and go to state 21
    FOR       shift, and go to state 23
    GOTO      shift, and go to state 24
    IF        shift, and go to state 25
    REPEAT    shift, and go to state 26
    UNTIL     shift, and go to state 116
    WHILE     shift, and go to state 27
    READ      shift, and go to state 28
    SYS_PROC  shift, and go to state 29
    INTEGER   shift, and go to state 30
    ID        shift, and go to state 31

    compound_stmt   go to state 32
    stmt            go to state 33
    non_label_stmt  go to state 34
    assign_stmt     go to state 35
    proc_stmt       go to state 36
    if_stmt         go to state 37
    repeat_stmt     go to state 38
    while_stmt      go to state 39
    for_stmt        go to state 40
    case_stmt       go to state 41
    goto_stmt       go to state 42


State 69

   87 while_stmt: WHILE expression . DO stmt
   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 100
    UNEQUAL  shift, and go to state 101
    GE       shift, and go to state 102
    GT       shift, and go to state 103
    LE       shift, and go to state 104
    LT       shift, and go to state 105
    DO       shift, and go to state 117


State 70

   82 proc_stmt: READ LP . factor RP

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    factor       go to state 118


State 71

   81 proc_stmt: SYS_PROC LP . expression_list RP

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value      go to state 60
    expression_list  go to state 119
    expression       go to state 120
    expr             go to state 62
    term             go to state 63
    factor           go to state 64


State 72

   64 stmt: INTEGER COLON . non_label_stmt

    _BEGIN    shift, and go to state 11
    CASE      shift, and go to state 21
    FOR       shift, and go to state 23
    GOTO      shift, and go to state 24
    IF        shift, and go to state 25
    REPEAT    shift, and go to state 26
    WHILE     shift, and go to state 27
    READ      shift, and go to state 28
    SYS_PROC  shift, and go to state 29
    ID        shift, and go to state 31

    compound_stmt   go to state 32
    non_label_stmt  go to state 121
    assign_stmt     go to state 35
    proc_stmt       go to state 36
    if_stmt         go to state 37
    repeat_stmt     go to state 38
    while_stmt      go to state 39
    for_stmt        go to state 40
    case_stmt       go to state 41
    goto_stmt       go to state 42


State 73

   75 assign_stmt: ID ASSIGN . expression

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    expression   go to state 122
    expr         go to state 62
    term         go to state 63
    factor       go to state 64


State 74

   79 proc_stmt: ID LP . args_list RP

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    expression   go to state 123
    expr         go to state 62
    term         go to state 63
    factor       go to state 64
    args_list    go to state 124


State 75

   76 assign_stmt: ID LB . expression RB ASSIGN expression

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    expression   go to state 125
    expr         go to state 62
    term         go to state 63
    factor       go to state 64


State 76

   77 assign_stmt: ID DOT . ID ASSIGN expression

    ID  shift, and go to state 126


State 77

   62 stmt_list: stmt_list stmt SEMI .

    $default  reduce using rule 62 (stmt_list)


State 78

   10 const_expr_list: ID EQUAL const_value . SEMI

    SEMI  shift, and go to state 127


State 79

    9 const_expr_list: const_expr_list ID EQUAL . const_value SEMI

    SYS_CON  shift, and go to state 52
    INTEGER  shift, and go to state 54
    REAL     shift, and go to state 55
    CHAR     shift, and go to state 56
    STRING   shift, and go to state 57

    const_value  go to state 128


State 80

   20 type_definition: ID EQUAL . type_decl SEMI

    MINUS     shift, and go to state 129
    ARRAY     shift, and go to state 130
    RECORD    shift, and go to state 131
    SYS_CON   shift, and go to state 52
    SYS_TYPE  shift, and go to state 132
    INTEGER   shift, and go to state 54
    REAL      shift, and go to state 55
    CHAR      shift, and go to state 56
    STRING    shift, and go to state 57
    ID        shift, and go to state 133
    LP        shift, and go to state 134

    const_value       go to state 135
    type_decl         go to state 136
    simple_type_decl  go to state 137
    array_type_decl   go to state 138
    record_type_decl  go to state 139


State 81

   18 type_decl_list: type_decl_list type_definition .

    $default  reduce using rule 18 (type_decl_list)


State 82

   37 name_list: ID .

    $default  reduce using rule 37 (name_list)


State 83

   36 name_list: name_list . COMMA ID
   42 var_decl: name_list . COLON type_decl SEMI

    COMMA  shift, and go to state 140
    COLON  shift, and go to state 141


State 84

   38 var_part: VAR var_decl_list .
   40 var_decl_list: var_decl_list . var_decl

    ID  shift, and go to state 82

    $default  reduce using rule 38 (var_part)

    name_list  go to state 83
    var_decl   go to state 142


State 85

   41 var_decl_list: var_decl .

    $default  reduce using rule 41 (var_decl_list)


State 86

   49 function_head: FUNCTION . ID parameters COLON simple_type_decl

    ID  shift, and go to state 143


State 87

   51 procedure_head: PROCEDURE . ID parameters

    ID  shift, and go to state 144


State 88

    5 routine_head: label_part const_part type_part var_part routine_part .
   43 routine_part: routine_part . function_decl
   44             | routine_part . procedure_decl

    FUNCTION   shift, and go to state 86
    PROCEDURE  shift, and go to state 87

    $default  reduce using rule 5 (routine_head)

    function_decl   go to state 145
    function_head   go to state 90
    procedure_decl  go to state 146
    procedure_head  go to state 92


State 89

   45 routine_part: function_decl .

    $default  reduce using rule 45 (routine_part)


State 90

   48 function_decl: function_head . SEMI sub_routine SEMI

    SEMI  shift, and go to state 147


State 91

   46 routine_part: procedure_decl .

    $default  reduce using rule 46 (routine_part)


State 92

   50 procedure_decl: procedure_head . SEMI sub_routine SEMI

    SEMI  shift, and go to state 148


State 93

  121 factor: NOT factor .

    $default  reduce using rule 121 (factor)


State 94

  122 factor: MINUS factor .

    $default  reduce using rule 122 (factor)


State 95

  118 factor: SYS_FUNCT LP . args_list RP

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    expression   go to state 123
    expr         go to state 62
    term         go to state 63
    factor       go to state 64
    args_list    go to state 149


State 96

  116 factor: ID LP . args_list RP

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    expression   go to state 123
    expr         go to state 62
    term         go to state 63
    factor       go to state 64
    args_list    go to state 150


State 97

  123 factor: ID LB . expression RB

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    expression   go to state 151
    expr         go to state 62
    term         go to state 63
    factor       go to state 64


State 98

  124 factor: ID DOT . ID

    ID  shift, and go to state 152


State 99

   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr
  120 factor: LP expression . RP

    EQUAL    shift, and go to state 100
    UNEQUAL  shift, and go to state 101
    GE       shift, and go to state 102
    GT       shift, and go to state 103
    LE       shift, and go to state 104
    LT       shift, and go to state 105
    RP       shift, and go to state 153


State 100

  103 expression: expression EQUAL . expr

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    expr         go to state 154
    term         go to state 63
    factor       go to state 64


State 101

  104 expression: expression UNEQUAL . expr

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    expr         go to state 155
    term         go to state 63
    factor       go to state 64


State 102

   99 expression: expression GE . expr

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    expr         go to state 156
    term         go to state 63
    factor       go to state 64


State 103

  100 expression: expression GT . expr

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    expr         go to state 157
    term         go to state 63
    factor       go to state 64


State 104

  101 expression: expression LE . expr

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    expr         go to state 158
    term         go to state 63
    factor       go to state 64


State 105

  102 expression: expression LT . expr

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    expr         go to state 159
    term         go to state 63
    factor       go to state 64


State 106

   91 case_stmt: CASE expression OF . case_expr_list _END

    SYS_CON  shift, and go to state 52
    INTEGER  shift, and go to state 54
    REAL     shift, and go to state 55
    CHAR     shift, and go to state 56
    STRING   shift, and go to state 57
    ID       shift, and go to state 160

    const_value     go to state 161
    case_expr_list  go to state 162
    case_expr       go to state 163


State 107

  108 expr: expr OR . term

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    term         go to state 164
    factor       go to state 64


State 108

  106 expr: expr PLUS . term

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    term         go to state 165
    factor       go to state 64


State 109

  107 expr: expr MINUS . term

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    term         go to state 166
    factor       go to state 64


State 110

  113 term: term AND . factor

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    factor       go to state 167


State 111

  110 term: term MUL . factor

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    factor       go to state 168


State 112

  111 term: term DIV . factor

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    factor       go to state 169


State 113

  112 term: term MOD . factor

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    factor       go to state 170


State 114

   88 for_stmt: FOR ID ASSIGN . expression direction expression DO stmt

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    expression   go to state 171
    expr         go to state 62
    term         go to state 63
    factor       go to state 64


State 115

   83 if_stmt: IF expression THEN . stmt else_clause

    _BEGIN    shift, and go to state 11
    CASE      shift, and go to state 21
    FOR       shift, and go to state 23
    GOTO      shift, and go to state 24
    IF        shift, and go to state 25
    REPEAT    shift, and go to state 26
    WHILE     shift, and go to state 27
    READ      shift, and go to state 28
    SYS_PROC  shift, and go to state 29
    INTEGER   shift, and go to state 30
    ID        shift, and go to state 31

    compound_stmt   go to state 32
    stmt            go to state 172
    non_label_stmt  go to state 34
    assign_stmt     go to state 35
    proc_stmt       go to state 36
    if_stmt         go to state 37
    repeat_stmt     go to state 38
    while_stmt      go to state 39
    for_stmt        go to state 40
    case_stmt       go to state 41
    goto_stmt       go to state 42


State 116

   86 repeat_stmt: REPEAT stmt_list UNTIL . expression

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    expression   go to state 173
    expr         go to state 62
    term         go to state 63
    factor       go to state 64


State 117

   87 while_stmt: WHILE expression DO . stmt

    _BEGIN    shift, and go to state 11
    CASE      shift, and go to state 21
    FOR       shift, and go to state 23
    GOTO      shift, and go to state 24
    IF        shift, and go to state 25
    REPEAT    shift, and go to state 26
    WHILE     shift, and go to state 27
    READ      shift, and go to state 28
    SYS_PROC  shift, and go to state 29
    INTEGER   shift, and go to state 30
    ID        shift, and go to state 31

    compound_stmt   go to state 32
    stmt            go to state 174
    non_label_stmt  go to state 34
    assign_stmt     go to state 35
    proc_stmt       go to state 36
    if_stmt         go to state 37
    repeat_stmt     go to state 38
    while_stmt      go to state 39
    for_stmt        go to state 40
    case_stmt       go to state 41
    goto_stmt       go to state 42


State 118

   82 proc_stmt: READ LP factor . RP

    RP  shift, and go to state 175


State 119

   81 proc_stmt: SYS_PROC LP expression_list . RP
   97 expression_list: expression_list . COMMA expression

    RP     shift, and go to state 176
    COMMA  shift, and go to state 177


State 120

   98 expression_list: expression .
   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 100
    UNEQUAL  shift, and go to state 101
    GE       shift, and go to state 102
    GT       shift, and go to state 103
    LE       shift, and go to state 104
    LT       shift, and go to state 105

    $default  reduce using rule 98 (expression_list)


State 121

   64 stmt: INTEGER COLON non_label_stmt .

    $default  reduce using rule 64 (stmt)


State 122

   75 assign_stmt: ID ASSIGN expression .
   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 100
    UNEQUAL  shift, and go to state 101
    GE       shift, and go to state 102
    GT       shift, and go to state 103
    LE       shift, and go to state 104
    LT       shift, and go to state 105

    $default  reduce using rule 75 (assign_stmt)


State 123

   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr
  126 args_list: expression .

    EQUAL    shift, and go to state 100
    UNEQUAL  shift, and go to state 101
    GE       shift, and go to state 102
    GT       shift, and go to state 103
    LE       shift, and go to state 104
    LT       shift, and go to state 105

    $default  reduce using rule 126 (args_list)


State 124

   79 proc_stmt: ID LP args_list . RP
  125 args_list: args_list . COMMA expression

    RP     shift, and go to state 178
    COMMA  shift, and go to state 179


State 125

   76 assign_stmt: ID LB expression . RB ASSIGN expression
   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 100
    UNEQUAL  shift, and go to state 101
    GE       shift, and go to state 102
    GT       shift, and go to state 103
    LE       shift, and go to state 104
    LT       shift, and go to state 105
    RB       shift, and go to state 180


State 126

   77 assign_stmt: ID DOT ID . ASSIGN expression

    ASSIGN  shift, and go to state 181


State 127

   10 const_expr_list: ID EQUAL const_value SEMI .

    $default  reduce using rule 10 (const_expr_list)


State 128

    9 const_expr_list: const_expr_list ID EQUAL const_value . SEMI

    SEMI  shift, and go to state 182


State 129

   28 simple_type_decl: MINUS . const_value DOTDOT const_value
   29                 | MINUS . const_value DOTDOT MINUS const_value

    SYS_CON  shift, and go to state 52
    INTEGER  shift, and go to state 54
    REAL     shift, and go to state 55
    CHAR     shift, and go to state 56
    STRING   shift, and go to state 57

    const_value  go to state 183


State 130

   31 array_type_decl: ARRAY . LB simple_type_decl RB OF type_decl

    LB  shift, and go to state 184


State 131

   32 record_type_decl: RECORD . field_decl_list _END

    ID  shift, and go to state 82

    field_decl_list  go to state 185
    field_decl       go to state 186
    name_list        go to state 187


State 132

   24 simple_type_decl: SYS_TYPE .

    $default  reduce using rule 24 (simple_type_decl)


State 133

   25 simple_type_decl: ID .
   30                 | ID . DOTDOT ID

    DOTDOT  shift, and go to state 188

    $default  reduce using rule 25 (simple_type_decl)


State 134

   26 simple_type_decl: LP . name_list RP

    ID  shift, and go to state 82

    name_list  go to state 189


State 135

   27 simple_type_decl: const_value . DOTDOT const_value

    DOTDOT  shift, and go to state 190


State 136

   20 type_definition: ID EQUAL type_decl . SEMI

    SEMI  shift, and go to state 191


State 137

   21 type_decl: simple_type_decl .

    $default  reduce using rule 21 (type_decl)


State 138

   22 type_decl: array_type_decl .

    $default  reduce using rule 22 (type_decl)


State 139

   23 type_decl: record_type_decl .

    $default  reduce using rule 23 (type_decl)


State 140

   36 name_list: name_list COMMA . ID

    ID  shift, and go to state 192


State 141

   42 var_decl: name_list COLON . type_decl SEMI

    MINUS     shift, and go to state 129
    ARRAY     shift, and go to state 130
    RECORD    shift, and go to state 131
    SYS_CON   shift, and go to state 52
    SYS_TYPE  shift, and go to state 132
    INTEGER   shift, and go to state 54
    REAL      shift, and go to state 55
    CHAR      shift, and go to state 56
    STRING    shift, and go to state 57
    ID        shift, and go to state 133
    LP        shift, and go to state 134

    const_value       go to state 135
    type_decl         go to state 193
    simple_type_decl  go to state 137
    array_type_decl   go to state 138
    record_type_decl  go to state 139


State 142

   40 var_decl_list: var_decl_list var_decl .

    $default  reduce using rule 40 (var_decl_list)


State 143

   49 function_head: FUNCTION ID . parameters COLON simple_type_decl

    LP  shift, and go to state 194

    $default  reduce using rule 53 (parameters)

    parameters  go to state 195


State 144

   51 procedure_head: PROCEDURE ID . parameters

    LP  shift, and go to state 194

    $default  reduce using rule 53 (parameters)

    parameters  go to state 196


State 145

   43 routine_part: routine_part function_decl .

    $default  reduce using rule 43 (routine_part)


State 146

   44 routine_part: routine_part procedure_decl .

    $default  reduce using rule 44 (routine_part)


State 147

   48 function_decl: function_head SEMI . sub_routine SEMI

    $default  reduce using rule 6 (label_part)

    sub_routine   go to state 197
    routine_head  go to state 198
    label_part    go to state 8


State 148

   50 procedure_decl: procedure_head SEMI . sub_routine SEMI

    $default  reduce using rule 6 (label_part)

    sub_routine   go to state 199
    routine_head  go to state 198
    label_part    go to state 8


State 149

  118 factor: SYS_FUNCT LP args_list . RP
  125 args_list: args_list . COMMA expression

    RP     shift, and go to state 200
    COMMA  shift, and go to state 179


State 150

  116 factor: ID LP args_list . RP
  125 args_list: args_list . COMMA expression

    RP     shift, and go to state 201
    COMMA  shift, and go to state 179


State 151

   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr
  123 factor: ID LB expression . RB

    EQUAL    shift, and go to state 100
    UNEQUAL  shift, and go to state 101
    GE       shift, and go to state 102
    GT       shift, and go to state 103
    LE       shift, and go to state 104
    LT       shift, and go to state 105
    RB       shift, and go to state 202


State 152

  124 factor: ID DOT ID .

    $default  reduce using rule 124 (factor)


State 153

  120 factor: LP expression RP .

    $default  reduce using rule 120 (factor)


State 154

  103 expression: expression EQUAL expr .
  106 expr: expr . PLUS term
  107     | expr . MINUS term
  108     | expr . OR term

    OR     shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109

    $default  reduce using rule 103 (expression)


State 155

  104 expression: expression UNEQUAL expr .
  106 expr: expr . PLUS term
  107     | expr . MINUS term
  108     | expr . OR term

    OR     shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109

    $default  reduce using rule 104 (expression)


State 156

   99 expression: expression GE expr .
  106 expr: expr . PLUS term
  107     | expr . MINUS term
  108     | expr . OR term

    OR     shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109

    $default  reduce using rule 99 (expression)


State 157

  100 expression: expression GT expr .
  106 expr: expr . PLUS term
  107     | expr . MINUS term
  108     | expr . OR term

    OR     shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109

    $default  reduce using rule 100 (expression)


State 158

  101 expression: expression LE expr .
  106 expr: expr . PLUS term
  107     | expr . MINUS term
  108     | expr . OR term

    OR     shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109

    $default  reduce using rule 101 (expression)


State 159

  102 expression: expression LT expr .
  106 expr: expr . PLUS term
  107     | expr . MINUS term
  108     | expr . OR term

    OR     shift, and go to state 107
    PLUS   shift, and go to state 108
    MINUS  shift, and go to state 109

    $default  reduce using rule 102 (expression)


State 160

   95 case_expr: ID . COLON stmt SEMI

    COLON  shift, and go to state 203


State 161

   94 case_expr: const_value . COLON stmt SEMI

    COLON  shift, and go to state 204


State 162

   91 case_stmt: CASE expression OF case_expr_list . _END
   92 case_expr_list: case_expr_list . case_expr

    _END     shift, and go to state 205
    SYS_CON  shift, and go to state 52
    INTEGER  shift, and go to state 54
    REAL     shift, and go to state 55
    CHAR     shift, and go to state 56
    STRING   shift, and go to state 57
    ID       shift, and go to state 160

    const_value  go to state 161
    case_expr    go to state 206


State 163

   93 case_expr_list: case_expr .

    $default  reduce using rule 93 (case_expr_list)


State 164

  108 expr: expr OR term .
  110 term: term . MUL factor
  111     | term . DIV factor
  112     | term . MOD factor
  113     | term . AND factor

    AND  shift, and go to state 110
    MUL  shift, and go to state 111
    DIV  shift, and go to state 112
    MOD  shift, and go to state 113

    $default  reduce using rule 108 (expr)


State 165

  106 expr: expr PLUS term .
  110 term: term . MUL factor
  111     | term . DIV factor
  112     | term . MOD factor
  113     | term . AND factor

    AND  shift, and go to state 110
    MUL  shift, and go to state 111
    DIV  shift, and go to state 112
    MOD  shift, and go to state 113

    $default  reduce using rule 106 (expr)


State 166

  107 expr: expr MINUS term .
  110 term: term . MUL factor
  111     | term . DIV factor
  112     | term . MOD factor
  113     | term . AND factor

    AND  shift, and go to state 110
    MUL  shift, and go to state 111
    DIV  shift, and go to state 112
    MOD  shift, and go to state 113

    $default  reduce using rule 107 (expr)


State 167

  113 term: term AND factor .

    $default  reduce using rule 113 (term)


State 168

  110 term: term MUL factor .

    $default  reduce using rule 110 (term)


State 169

  111 term: term DIV factor .

    $default  reduce using rule 111 (term)


State 170

  112 term: term MOD factor .

    $default  reduce using rule 112 (term)


State 171

   88 for_stmt: FOR ID ASSIGN expression . direction expression DO stmt
   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 100
    UNEQUAL  shift, and go to state 101
    GE       shift, and go to state 102
    GT       shift, and go to state 103
    LE       shift, and go to state 104
    LT       shift, and go to state 105
    DOWNTO   shift, and go to state 207
    TO       shift, and go to state 208

    direction  go to state 209


State 172

   83 if_stmt: IF expression THEN stmt . else_clause

    ELSE  shift, and go to state 210

    ELSE      [reduce using rule 85 (else_clause)]
    $default  reduce using rule 85 (else_clause)

    else_clause  go to state 211


State 173

   86 repeat_stmt: REPEAT stmt_list UNTIL expression .
   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 100
    UNEQUAL  shift, and go to state 101
    GE       shift, and go to state 102
    GT       shift, and go to state 103
    LE       shift, and go to state 104
    LT       shift, and go to state 105

    $default  reduce using rule 86 (repeat_stmt)


State 174

   87 while_stmt: WHILE expression DO stmt .

    $default  reduce using rule 87 (while_stmt)


State 175

   82 proc_stmt: READ LP factor RP .

    $default  reduce using rule 82 (proc_stmt)


State 176

   81 proc_stmt: SYS_PROC LP expression_list RP .

    $default  reduce using rule 81 (proc_stmt)


State 177

   97 expression_list: expression_list COMMA . expression

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    expression   go to state 212
    expr         go to state 62
    term         go to state 63
    factor       go to state 64


State 178

   79 proc_stmt: ID LP args_list RP .

    $default  reduce using rule 79 (proc_stmt)


State 179

  125 args_list: args_list COMMA . expression

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    expression   go to state 213
    expr         go to state 62
    term         go to state 63
    factor       go to state 64


State 180

   76 assign_stmt: ID LB expression RB . ASSIGN expression

    ASSIGN  shift, and go to state 214


State 181

   77 assign_stmt: ID DOT ID ASSIGN . expression

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    expression   go to state 215
    expr         go to state 62
    term         go to state 63
    factor       go to state 64


State 182

    9 const_expr_list: const_expr_list ID EQUAL const_value SEMI .

    $default  reduce using rule 9 (const_expr_list)


State 183

   28 simple_type_decl: MINUS const_value . DOTDOT const_value
   29                 | MINUS const_value . DOTDOT MINUS const_value

    DOTDOT  shift, and go to state 216


State 184

   31 array_type_decl: ARRAY LB . simple_type_decl RB OF type_decl

    MINUS     shift, and go to state 129
    SYS_CON   shift, and go to state 52
    SYS_TYPE  shift, and go to state 132
    INTEGER   shift, and go to state 54
    REAL      shift, and go to state 55
    CHAR      shift, and go to state 56
    STRING    shift, and go to state 57
    ID        shift, and go to state 133
    LP        shift, and go to state 134

    const_value       go to state 135
    simple_type_decl  go to state 217


State 185

   32 record_type_decl: RECORD field_decl_list . _END
   33 field_decl_list: field_decl_list . field_decl

    _END  shift, and go to state 218
    ID    shift, and go to state 82

    field_decl  go to state 219
    name_list   go to state 187


State 186

   34 field_decl_list: field_decl .

    $default  reduce using rule 34 (field_decl_list)


State 187

   35 field_decl: name_list . COLON type_decl SEMI
   36 name_list: name_list . COMMA ID

    COMMA  shift, and go to state 140
    COLON  shift, and go to state 220


State 188

   30 simple_type_decl: ID DOTDOT . ID

    ID  shift, and go to state 221


State 189

   26 simple_type_decl: LP name_list . RP
   36 name_list: name_list . COMMA ID

    RP     shift, and go to state 222
    COMMA  shift, and go to state 140


State 190

   27 simple_type_decl: const_value DOTDOT . const_value

    SYS_CON  shift, and go to state 52
    INTEGER  shift, and go to state 54
    REAL     shift, and go to state 55
    CHAR     shift, and go to state 56
    STRING   shift, and go to state 57

    const_value  go to state 223


State 191

   20 type_definition: ID EQUAL type_decl SEMI .

    $default  reduce using rule 20 (type_definition)


State 192

   36 name_list: name_list COMMA ID .

    $default  reduce using rule 36 (name_list)


State 193

   42 var_decl: name_list COLON type_decl . SEMI

    SEMI  shift, and go to state 224


State 194

   52 parameters: LP . para_decl_list RP

    VAR  shift, and go to state 225
    ID   shift, and go to state 82

    name_list       go to state 226
    para_decl_list  go to state 227
    para_type_list  go to state 228
    var_para_list   go to state 229
    val_para_list   go to state 230


State 195

   49 function_head: FUNCTION ID parameters . COLON simple_type_decl

    COLON  shift, and go to state 231


State 196

   51 procedure_head: PROCEDURE ID parameters .

    $default  reduce using rule 51 (procedure_head)


State 197

   48 function_decl: function_head SEMI sub_routine . SEMI

    SEMI  shift, and go to state 232


State 198

    4 sub_routine: routine_head . routine_body

    _BEGIN  shift, and go to state 11

    routine_body   go to state 233
    compound_stmt  go to state 13


State 199

   50 procedure_decl: procedure_head SEMI sub_routine . SEMI

    SEMI  shift, and go to state 234


State 200

  118 factor: SYS_FUNCT LP args_list RP .

    $default  reduce using rule 118 (factor)


State 201

  116 factor: ID LP args_list RP .

    $default  reduce using rule 116 (factor)


State 202

  123 factor: ID LB expression RB .

    $default  reduce using rule 123 (factor)


State 203

   95 case_expr: ID COLON . stmt SEMI

    _BEGIN    shift, and go to state 11
    CASE      shift, and go to state 21
    FOR       shift, and go to state 23
    GOTO      shift, and go to state 24
    IF        shift, and go to state 25
    REPEAT    shift, and go to state 26
    WHILE     shift, and go to state 27
    READ      shift, and go to state 28
    SYS_PROC  shift, and go to state 29
    INTEGER   shift, and go to state 30
    ID        shift, and go to state 31

    compound_stmt   go to state 32
    stmt            go to state 235
    non_label_stmt  go to state 34
    assign_stmt     go to state 35
    proc_stmt       go to state 36
    if_stmt         go to state 37
    repeat_stmt     go to state 38
    while_stmt      go to state 39
    for_stmt        go to state 40
    case_stmt       go to state 41
    goto_stmt       go to state 42


State 204

   94 case_expr: const_value COLON . stmt SEMI

    _BEGIN    shift, and go to state 11
    CASE      shift, and go to state 21
    FOR       shift, and go to state 23
    GOTO      shift, and go to state 24
    IF        shift, and go to state 25
    REPEAT    shift, and go to state 26
    WHILE     shift, and go to state 27
    READ      shift, and go to state 28
    SYS_PROC  shift, and go to state 29
    INTEGER   shift, and go to state 30
    ID        shift, and go to state 31

    compound_stmt   go to state 32
    stmt            go to state 236
    non_label_stmt  go to state 34
    assign_stmt     go to state 35
    proc_stmt       go to state 36
    if_stmt         go to state 37
    repeat_stmt     go to state 38
    while_stmt      go to state 39
    for_stmt        go to state 40
    case_stmt       go to state 41
    goto_stmt       go to state 42


State 205

   91 case_stmt: CASE expression OF case_expr_list _END .

    $default  reduce using rule 91 (case_stmt)


State 206

   92 case_expr_list: case_expr_list case_expr .

    $default  reduce using rule 92 (case_expr_list)


State 207

   90 direction: DOWNTO .

    $default  reduce using rule 90 (direction)


State 208

   89 direction: TO .

    $default  reduce using rule 89 (direction)


State 209

   88 for_stmt: FOR ID ASSIGN expression direction . expression DO stmt

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    expression   go to state 237
    expr         go to state 62
    term         go to state 63
    factor       go to state 64


State 210

   84 else_clause: ELSE . stmt

    _BEGIN    shift, and go to state 11
    CASE      shift, and go to state 21
    FOR       shift, and go to state 23
    GOTO      shift, and go to state 24
    IF        shift, and go to state 25
    REPEAT    shift, and go to state 26
    WHILE     shift, and go to state 27
    READ      shift, and go to state 28
    SYS_PROC  shift, and go to state 29
    INTEGER   shift, and go to state 30
    ID        shift, and go to state 31

    compound_stmt   go to state 32
    stmt            go to state 238
    non_label_stmt  go to state 34
    assign_stmt     go to state 35
    proc_stmt       go to state 36
    if_stmt         go to state 37
    repeat_stmt     go to state 38
    while_stmt      go to state 39
    for_stmt        go to state 40
    case_stmt       go to state 41
    goto_stmt       go to state 42


State 211

   83 if_stmt: IF expression THEN stmt else_clause .

    $default  reduce using rule 83 (if_stmt)


State 212

   97 expression_list: expression_list COMMA expression .
   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 100
    UNEQUAL  shift, and go to state 101
    GE       shift, and go to state 102
    GT       shift, and go to state 103
    LE       shift, and go to state 104
    LT       shift, and go to state 105

    $default  reduce using rule 97 (expression_list)


State 213

   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr
  125 args_list: args_list COMMA expression .

    EQUAL    shift, and go to state 100
    UNEQUAL  shift, and go to state 101
    GE       shift, and go to state 102
    GT       shift, and go to state 103
    LE       shift, and go to state 104
    LT       shift, and go to state 105

    $default  reduce using rule 125 (args_list)


State 214

   76 assign_stmt: ID LB expression RB ASSIGN . expression

    NOT        shift, and go to state 50
    MINUS      shift, and go to state 51
    SYS_CON    shift, and go to state 52
    SYS_FUNCT  shift, and go to state 53
    INTEGER    shift, and go to state 54
    REAL       shift, and go to state 55
    CHAR       shift, and go to state 56
    STRING     shift, and go to state 57
    ID         shift, and go to state 58
    LP         shift, and go to state 59

    const_value  go to state 60
    expression   go to state 239
    expr         go to state 62
    term         go to state 63
    factor       go to state 64


State 215

   77 assign_stmt: ID DOT ID ASSIGN expression .
   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 100
    UNEQUAL  shift, and go to state 101
    GE       shift, and go to state 102
    GT       shift, and go to state 103
    LE       shift, and go to state 104
    LT       shift, and go to state 105

    $default  reduce using rule 77 (assign_stmt)


State 216

   28 simple_type_decl: MINUS const_value DOTDOT . const_value
   29                 | MINUS const_value DOTDOT . MINUS const_value

    MINUS    shift, and go to state 240
    SYS_CON  shift, and go to state 52
    INTEGER  shift, and go to state 54
    REAL     shift, and go to state 55
    CHAR     shift, and go to state 56
    STRING   shift, and go to state 57

    const_value  go to state 241


State 217

   31 array_type_decl: ARRAY LB simple_type_decl . RB OF type_decl

    RB  shift, and go to state 242


State 218

   32 record_type_decl: RECORD field_decl_list _END .

    $default  reduce using rule 32 (record_type_decl)


State 219

   33 field_decl_list: field_decl_list field_decl .

    $default  reduce using rule 33 (field_decl_list)


State 220

   35 field_decl: name_list COLON . type_decl SEMI

    MINUS     shift, and go to state 129
    ARRAY     shift, and go to state 130
    RECORD    shift, and go to state 131
    SYS_CON   shift, and go to state 52
    SYS_TYPE  shift, and go to state 132
    INTEGER   shift, and go to state 54
    REAL      shift, and go to state 55
    CHAR      shift, and go to state 56
    STRING    shift, and go to state 57
    ID        shift, and go to state 133
    LP        shift, and go to state 134

    const_value       go to state 135
    type_decl         go to state 243
    simple_type_decl  go to state 137
    array_type_decl   go to state 138
    record_type_decl  go to state 139


State 221

   30 simple_type_decl: ID DOTDOT ID .

    $default  reduce using rule 30 (simple_type_decl)


State 222

   26 simple_type_decl: LP name_list RP .

    $default  reduce using rule 26 (simple_type_decl)


State 223

   27 simple_type_decl: const_value DOTDOT const_value .

    $default  reduce using rule 27 (simple_type_decl)


State 224

   42 var_decl: name_list COLON type_decl SEMI .

    $default  reduce using rule 42 (var_decl)


State 225

   58 var_para_list: VAR . name_list

    ID  shift, and go to state 82

    name_list  go to state 244


State 226

   36 name_list: name_list . COMMA ID
   59 val_para_list: name_list .

    COMMA  shift, and go to state 140

    $default  reduce using rule 59 (val_para_list)


State 227

   52 parameters: LP para_decl_list . RP
   54 para_decl_list: para_decl_list . SEMI para_type_list

    RP    shift, and go to state 245
    SEMI  shift, and go to state 246


State 228

   55 para_decl_list: para_type_list .

    $default  reduce using rule 55 (para_decl_list)


State 229

   56 para_type_list: var_para_list . COLON simple_type_decl

    COLON  shift, and go to state 247


State 230

   57 para_type_list: val_para_list . COLON simple_type_decl

    COLON  shift, and go to state 248


State 231

   49 function_head: FUNCTION ID parameters COLON . simple_type_decl

    MINUS     shift, and go to state 129
    SYS_CON   shift, and go to state 52
    SYS_TYPE  shift, and go to state 132
    INTEGER   shift, and go to state 54
    REAL      shift, and go to state 55
    CHAR      shift, and go to state 56
    STRING    shift, and go to state 57
    ID        shift, and go to state 133
    LP        shift, and go to state 134

    const_value       go to state 135
    simple_type_decl  go to state 249


State 232

   48 function_decl: function_head SEMI sub_routine SEMI .

    $default  reduce using rule 48 (function_decl)


State 233

    4 sub_routine: routine_head routine_body .

    $default  reduce using rule 4 (sub_routine)


State 234

   50 procedure_decl: procedure_head SEMI sub_routine SEMI .

    $default  reduce using rule 50 (procedure_decl)


State 235

   95 case_expr: ID COLON stmt . SEMI

    SEMI  shift, and go to state 250


State 236

   94 case_expr: const_value COLON stmt . SEMI

    SEMI  shift, and go to state 251


State 237

   88 for_stmt: FOR ID ASSIGN expression direction expression . DO stmt
   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 100
    UNEQUAL  shift, and go to state 101
    GE       shift, and go to state 102
    GT       shift, and go to state 103
    LE       shift, and go to state 104
    LT       shift, and go to state 105
    DO       shift, and go to state 252


State 238

   84 else_clause: ELSE stmt .

    $default  reduce using rule 84 (else_clause)


State 239

   76 assign_stmt: ID LB expression RB ASSIGN expression .
   99 expression: expression . GE expr
  100           | expression . GT expr
  101           | expression . LE expr
  102           | expression . LT expr
  103           | expression . EQUAL expr
  104           | expression . UNEQUAL expr

    EQUAL    shift, and go to state 100
    UNEQUAL  shift, and go to state 101
    GE       shift, and go to state 102
    GT       shift, and go to state 103
    LE       shift, and go to state 104
    LT       shift, and go to state 105

    $default  reduce using rule 76 (assign_stmt)


State 240

   29 simple_type_decl: MINUS const_value DOTDOT MINUS . const_value

    SYS_CON  shift, and go to state 52
    INTEGER  shift, and go to state 54
    REAL     shift, and go to state 55
    CHAR     shift, and go to state 56
    STRING   shift, and go to state 57

    const_value  go to state 253


State 241

   28 simple_type_decl: MINUS const_value DOTDOT const_value .

    $default  reduce using rule 28 (simple_type_decl)


State 242

   31 array_type_decl: ARRAY LB simple_type_decl RB . OF type_decl

    OF  shift, and go to state 254


State 243

   35 field_decl: name_list COLON type_decl . SEMI

    SEMI  shift, and go to state 255


State 244

   36 name_list: name_list . COMMA ID
   58 var_para_list: VAR name_list .

    COMMA  shift, and go to state 140

    $default  reduce using rule 58 (var_para_list)


State 245

   52 parameters: LP para_decl_list RP .

    $default  reduce using rule 52 (parameters)


State 246

   54 para_decl_list: para_decl_list SEMI . para_type_list

    VAR  shift, and go to state 225
    ID   shift, and go to state 82

    name_list       go to state 226
    para_type_list  go to state 256
    var_para_list   go to state 229
    val_para_list   go to state 230


State 247

   56 para_type_list: var_para_list COLON . simple_type_decl

    MINUS     shift, and go to state 129
    SYS_CON   shift, and go to state 52
    SYS_TYPE  shift, and go to state 132
    INTEGER   shift, and go to state 54
    REAL      shift, and go to state 55
    CHAR      shift, and go to state 56
    STRING    shift, and go to state 57
    ID        shift, and go to state 133
    LP        shift, and go to state 134

    const_value       go to state 135
    simple_type_decl  go to state 257


State 248

   57 para_type_list: val_para_list COLON . simple_type_decl

    MINUS     shift, and go to state 129
    SYS_CON   shift, and go to state 52
    SYS_TYPE  shift, and go to state 132
    INTEGER   shift, and go to state 54
    REAL      shift, and go to state 55
    CHAR      shift, and go to state 56
    STRING    shift, and go to state 57
    ID        shift, and go to state 133
    LP        shift, and go to state 134

    const_value       go to state 135
    simple_type_decl  go to state 258


State 249

   49 function_head: FUNCTION ID parameters COLON simple_type_decl .

    $default  reduce using rule 49 (function_head)


State 250

   95 case_expr: ID COLON stmt SEMI .

    $default  reduce using rule 95 (case_expr)


State 251

   94 case_expr: const_value COLON stmt SEMI .

    $default  reduce using rule 94 (case_expr)


State 252

   88 for_stmt: FOR ID ASSIGN expression direction expression DO . stmt

    _BEGIN    shift, and go to state 11
    CASE      shift, and go to state 21
    FOR       shift, and go to state 23
    GOTO      shift, and go to state 24
    IF        shift, and go to state 25
    REPEAT    shift, and go to state 26
    WHILE     shift, and go to state 27
    READ      shift, and go to state 28
    SYS_PROC  shift, and go to state 29
    INTEGER   shift, and go to state 30
    ID        shift, and go to state 31

    compound_stmt   go to state 32
    stmt            go to state 259
    non_label_stmt  go to state 34
    assign_stmt     go to state 35
    proc_stmt       go to state 36
    if_stmt         go to state 37
    repeat_stmt     go to state 38
    while_stmt      go to state 39
    for_stmt        go to state 40
    case_stmt       go to state 41
    goto_stmt       go to state 42


State 253

   29 simple_type_decl: MINUS const_value DOTDOT MINUS const_value .

    $default  reduce using rule 29 (simple_type_decl)


State 254

   31 array_type_decl: ARRAY LB simple_type_decl RB OF . type_decl

    MINUS     shift, and go to state 129
    ARRAY     shift, and go to state 130
    RECORD    shift, and go to state 131
    SYS_CON   shift, and go to state 52
    SYS_TYPE  shift, and go to state 132
    INTEGER   shift, and go to state 54
    REAL      shift, and go to state 55
    CHAR      shift, and go to state 56
    STRING    shift, and go to state 57
    ID        shift, and go to state 133
    LP        shift, and go to state 134

    const_value       go to state 135
    type_decl         go to state 260
    simple_type_decl  go to state 137
    array_type_decl   go to state 138
    record_type_decl  go to state 139


State 255

   35 field_decl: name_list COLON type_decl SEMI .

    $default  reduce using rule 35 (field_decl)


State 256

   54 para_decl_list: para_decl_list SEMI para_type_list .

    $default  reduce using rule 54 (para_decl_list)


State 257

   56 para_type_list: var_para_list COLON simple_type_decl .

    $default  reduce using rule 56 (para_type_list)


State 258

   57 para_type_list: val_para_list COLON simple_type_decl .

    $default  reduce using rule 57 (para_type_list)


State 259

   88 for_stmt: FOR ID ASSIGN expression direction expression DO stmt .

    $default  reduce using rule 88 (for_stmt)


State 260

   31 array_type_decl: ARRAY LB simple_type_decl RB OF type_decl .

    $default  reduce using rule 31 (array_type_decl)
