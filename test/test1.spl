program test;

const
	t1 = 12;
	t2 = "Hello, world!";
	t3 = 'c';
	t4 = false;
	t5 = 0.23424;
	t6 = maxint;
	t7 = nil;


type
	a = integer;
	b = char;
	c = string;
	d = array [10] of integer;
	e = array [100] of array [10] of c;
	g = record
		a, b, g : integer;
		d : string;
		f : array [10] of integer;
		end;
	f = record
		a : integer;
		b : array [10] of g;
		end;

var
	ans : integer;
	tmp : integer;
    arr : array [10] of integer;
    bool1 : boolean;
    bool2 : boolean;

function gcd(a, b : integer) : integer;
var
	c : integer;
	d : f;

begin
	if b = 0 then begin
		gcd := a;
	end
	else begin
		c := a MOD ans;
		gcd := gcd(b, c);
	end
	;
end
;

procedure findMin(x, y, z: integer; var m: integer);
begin
   if x < y then
      m := x
   else
      m := y;

   if z < m then
      m := z;
end
;

begin
	ans := gcd(36, 9);

	while ans > 0 do begin
	    ans := 3;
	end;

    repeat
    begin
        ans := 3;
    end;
    until ans < 3;

	tmp := gcd(6, 3);
	findMin(1, 2, 3, 4);
100:	ans := tmp * ans;
    goto 100;

    for ans:= 1 to 10 do
    begin
        tmp := 3;
    end;

	ans := tmp + ans;
	ans := tmp - ans;
	ans := tmp / ans;
	bool1 := bool1 and bool2;
	bool1 := bool1 or bool2;

	bool1 := 3 > 2;
    bool1 := 3 <> 4;
	writeln(ans);
end
.